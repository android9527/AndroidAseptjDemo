// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.2.51'
    repositories {
        mavenLocal()

        jcenter() {
            url 'http://jcenter.bintray.com/'
        }
        google()
//        maven {
//            url 'file:///Users/chenfeiyue/Work/Work/android9527/AndroidAspectjDemo/maven-transform-lib/'
//        }
        maven {
            url uri('repo')
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

//        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'

//        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'

         classpath 'com.alex_mahao.gradle.plugin:gradleplugin:2.0.0'
        // 将项目发布到JCenter 所需要的jar   添加依赖
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
        classpath 'com.android9527.plugin:test:1.0.1-SNAPSHOT'

        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'
//        classpath 'org.aspectj:aspectjweaver:1.8.10'
//        //注意不能少了aspectjtools的依赖，否则会报错
//        classpath 'org.aspectj:aspectjtools:1.8.10'

    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter() {
            url 'http://jcenter.bintray.com'
        }
        maven {
            url uri('repo')
        }
    }

//    configurations.all {
//        resolutionStrategy {
//            cacheChangingModulesFor 0, 'seconds'
//        }
//    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}
